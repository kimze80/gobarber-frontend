{"ast":null,"code":"var _jsxFileName = \"/Users/josekim/Documents/rocketseat-bootcamp/gobarber/gobarber-web/src/routes/Route.tsx\";\nimport React from 'react';\nimport { Route as ReactDOMRoute, Redirect } from 'react-router-dom';\nimport { useAuth } from '../hooks/auth';\n\nconst Route = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const {\n    user\n  } = useAuth();\n  return /*#__PURE__*/React.createElement(ReactDOMRoute, Object.assign({}, rest, {\n    render: () => {\n      return isPrivate === !!user ? /*#__PURE__*/React.createElement(Component, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }) : /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: isPrivate ? '/' : '/dashboard'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default Route;","map":{"version":3,"sources":["/Users/josekim/Documents/rocketseat-bootcamp/gobarber/gobarber-web/src/routes/Route.tsx"],"names":["React","Route","ReactDOMRoute","Redirect","useAuth","isPrivate","component","Component","rest","user","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KAAK,IAAIC,aADX,EAGEC,QAHF,QAIO,kBAJP;AAMA,SAASC,OAAT,QAAwB,eAAxB;;AAOA,MAAMH,KAA2B,GAAG,CAAC;AACnCI,EAAAA,SAAS,GAAG,KADuB;AAEnCC,EAAAA,SAAS,EAAEC,SAFwB;AAGnC,KAAGC;AAHgC,CAAD,KAI9B;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAWL,OAAO,EAAxB;AACA,sBACE,oBAAC,aAAD,oBACMI,IADN;AAEE,IAAA,MAAM,EAAE,MAAM;AACZ,aAAOH,SAAS,KAAK,CAAC,CAACI,IAAhB,gBACL,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,gBAGL,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAEL,SAAS,GAAG,GAAH,GAAS;AAA9B,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF;AAKD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD,CAlBD;;AAoBA,eAAeJ,KAAf","sourcesContent":["import React from 'react';\nimport {\n  Route as ReactDOMRoute,\n  RouteProps as ReactDOMRouteProps,\n  Redirect,\n} from 'react-router-dom';\n\nimport { useAuth } from '../hooks/auth';\n\ninterface RouteProps extends ReactDOMRouteProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\n\nconst Route: React.FC<RouteProps> = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const { user } = useAuth();\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={() => {\n        return isPrivate === !!user ? (\n          <Component />\n        ) : (\n          <Redirect to={{ pathname: isPrivate ? '/' : '/dashboard' }} />\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n"]},"metadata":{},"sourceType":"module"}